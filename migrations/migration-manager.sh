#!/bin/bash

# üóÑÔ∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PokerTracker Pro
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
MIGRATIONS_DIR="migrations"
APPLIED_MIGRATIONS_FILE="$MIGRATIONS_DIR/.applied_migrations"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–∏–≥—Ä–∞—Ü–∏–π
init_migrations() {
    info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    mkdir -p "$MIGRATIONS_DIR"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    if [ ! -f "$APPLIED_MIGRATIONS_FILE" ]; then
        touch "$APPLIED_MIGRATIONS_FILE"
        success "–§–∞–π–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
    local base_migration="$MIGRATIONS_DIR/001_initial_schema.sql"
    if [ ! -f "$base_migration" ]; then
        cat > "$base_migration" << 'EOF'
-- üóÑÔ∏è –ë–∞–∑–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã
-- –í–µ—Ä—Å–∏—è: 1.0.0
-- –î–∞—Ç–∞: 2025-09-10

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–æ—Ñ–∏–ª–µ–π
CREATE TABLE IF NOT EXISTS public.profiles (
    id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,
    username TEXT UNIQUE NOT NULL,
    role TEXT DEFAULT 'player' CHECK (role IN ('player', 'admin')),
    telegram_id BIGINT UNIQUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
CREATE TABLE IF NOT EXISTS public.user_settings (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE UNIQUE,
    current_venue TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Ç—É—Ä–Ω–∏—Ä–æ–≤
CREATE TABLE IF NOT EXISTS public.tournaments (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    date TIMESTAMP WITH TIME ZONE NOT NULL,
    venue TEXT,
    buyin DECIMAL(10,2) NOT NULL,
    tournament_type TEXT DEFAULT 'freezeout',
    structure TEXT DEFAULT 'NL Hold''em',
    participants INTEGER,
    prize_pool DECIMAL(10,2),
    blind_levels TEXT,
    starting_stack INTEGER,
    ticket_image_url TEXT,
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
CREATE TABLE IF NOT EXISTS public.tournament_results (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    tournament_id UUID REFERENCES public.tournaments(id) ON DELETE CASCADE,
    position INTEGER NOT NULL,
    payout DECIMAL(10,2) DEFAULT 0,
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∫–æ–¥–æ–≤ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è Telegram
CREATE TABLE IF NOT EXISTS public.telegram_linking_codes (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    linking_code TEXT NOT NULL UNIQUE,
    expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
    is_used BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_tournaments_user_id ON public.tournaments(user_id);
CREATE INDEX IF NOT EXISTS idx_tournaments_date ON public.tournaments(date);
CREATE INDEX IF NOT EXISTS idx_tournament_results_tournament_id ON public.tournament_results(tournament_id);
CREATE INDEX IF NOT EXISTS idx_profiles_telegram_id ON public.profiles(telegram_id);
CREATE INDEX IF NOT EXISTS idx_telegram_linking_codes_code ON public.telegram_linking_codes(linking_code);

-- –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.profiles (id, username, role)
  VALUES (NEW.id, COALESCE(NEW.email, 'user_' || NEW.id), 'player');
  
  INSERT INTO public.user_settings (user_id)
  VALUES (NEW.id);
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- –ó–∞–ø–∏—Å—å –æ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
INSERT INTO public.migration_log (migration_name, applied_at, version)
VALUES ('001_initial_schema', NOW(), '1.0.0')
ON CONFLICT (migration_name) DO NOTHING;
EOF
        success "–ë–∞–∑–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $base_migration"
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–æ–≥–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
    create_migration_log_table
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π
create_migration_log_table() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    cat > "$MIGRATIONS_DIR/000_migration_log.sql" << 'EOF'
-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
CREATE TABLE IF NOT EXISTS public.migration_log (
    id SERIAL PRIMARY KEY,
    migration_name TEXT UNIQUE NOT NULL,
    applied_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    version TEXT,
    rollback_sql TEXT
);

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_migration_log_name ON public.migration_log(migration_name);
CREATE INDEX IF NOT EXISTS idx_migration_log_applied_at ON public.migration_log(applied_at);
EOF
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
create_migration() {
    local name=$1
    local description=$2
    
    if [ -z "$name" ]; then
        error "–£–∫–∞–∂–∏—Ç–µ –∏–º—è –º–∏–≥—Ä–∞—Ü–∏–∏: create_migration add_new_table '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã'"
        return 1
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–∏
    local next_number=$(printf "%03d" $(($(ls $MIGRATIONS_DIR/*.sql 2>/dev/null | wc -l) + 1)))
    local migration_file="$MIGRATIONS_DIR/${next_number}_${name}.sql"
    
    info "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: $migration_file"
    
    cat > "$migration_file" << EOF
-- üóÑÔ∏è –ú–∏–≥—Ä–∞—Ü–∏—è: $description
-- –§–∞–π–ª: ${next_number}_${name}.sql
-- –í–µ—Ä—Å–∏—è: $(jq -r '.version' VERSION.json 2>/dev/null || echo 'unknown')
-- –î–∞—Ç–∞: $(date +%Y-%m-%d)

-- ‚¨ÜÔ∏è UP MIGRATION (–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

-- TODO: –î–æ–±–∞–≤—å—Ç–µ SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
-- –ü—Ä–∏–º–µ—Ä:
-- CREATE TABLE example (
--     id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
--     name TEXT NOT NULL,
--     created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
-- );

-- ‚¨áÔ∏è DOWN MIGRATION (–æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π) 
-- ROLLBACK SQL (–¥–ª—è –æ—Ç–∫–∞—Ç–∞):
/*
-- TODO: –î–æ–±–∞–≤—å—Ç–µ SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
-- –ü—Ä–∏–º–µ—Ä:
-- DROP TABLE IF EXISTS example;
*/

-- üìù –ó–∞–ø–∏—Å—å –æ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
INSERT INTO public.migration_log (migration_name, applied_at, version, rollback_sql)
VALUES ('${next_number}_${name}', NOW(), '$(jq -r '.version' VERSION.json 2>/dev/null || echo 'unknown')', 
'-- Rollback commands here')
ON CONFLICT (migration_name) DO NOTHING;
EOF
    
    success "–ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $migration_file"
    info "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ SQL –∫–æ–º–∞–Ω–¥—ã"
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
apply_migrations() {
    info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if [ -f "$MIGRATIONS_DIR/000_migration_log.sql" ]; then
        info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π..."
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –≤ Supabase
        success "–¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ –≥–æ—Ç–æ–≤–∞"
    fi
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
    for migration_file in "$MIGRATIONS_DIR"/*.sql; do
        if [ -f "$migration_file" ]; then
            local migration_name=$(basename "$migration_file" .sql)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞
            if grep -q "$migration_name" "$APPLIED_MIGRATIONS_FILE" 2>/dev/null; then
                info "–ú–∏–≥—Ä–∞—Ü–∏—è $migration_name —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
                continue
            fi
            
            info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: $migration_name"
            
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –≤ Supabase
            # –ù–∞–ø—Ä–∏–º–µ—Ä: supabase db push –∏–ª–∏ psql –∫–æ–º–∞–Ω–¥–∞
            warning "–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ $migration_file –≤ Supabase SQL Editor"
            
            # –û—Ç–º–µ—á–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫–∞–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—É—é
            echo "$migration_name $(date)" >> "$APPLIED_MIGRATIONS_FILE"
            success "–ú–∏–≥—Ä–∞—Ü–∏—è $migration_name –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
        fi
    done
    
    success "–í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
}

# –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π
rollback_migrations() {
    local target_migration=$1
    
    if [ -z "$target_migration" ]; then
        error "–£–∫–∞–∂–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –æ—Ç–∫–∞—Ç–∞: rollback_migrations 001_initial_schema"
        return 1
    fi
    
    warning "–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –¥–æ: $target_migration"
    warning "–≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–∞–Ω–Ω—ã—Ö!"
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        info "–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –æ—Ç–º–µ–Ω–µ–Ω"
        return 0
    fi
    
    info "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
    warning "–í—ã–ø–æ–ª–Ω–∏—Ç–µ ROLLBACK SQL –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å
    info "–ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–∫–∞—Ç–∞:"
    grep -A 100 "$target_migration" "$APPLIED_MIGRATIONS_FILE" | tail -n +2
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local command=$1
    
    case "$command" in
        "init")
            init_migrations
            ;;
        "create")
            create_migration "$2" "$3"
            ;;
        "apply"|"up")
            apply_migrations
            ;;
        "rollback"|"down")
            rollback_migrations "$2"
            ;;
        "status")
            info "–°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:"
            if [ -f "$APPLIED_MIGRATIONS_FILE" ]; then
                cat "$APPLIED_MIGRATIONS_FILE"
            else
                warning "–ú–∏–≥—Ä–∞—Ü–∏–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
            fi
            ;;
        "help"|"")
            echo "üóÑÔ∏è PokerTracker Pro - –ú–µ–Ω–µ–¥–∂–µ—Ä –º–∏–≥—Ä–∞—Ü–∏–π"
            echo
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  init                        - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  create <name> [description] - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é"
            echo "  apply                       - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏"
            echo "  rollback <migration>        - –û—Ç–∫–∞—Ç–∏—Ç—å –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"
            echo "  status                      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π"
            echo "  help                        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  ./migrations/migration-manager.sh init"
            echo "  ./migrations/migration-manager.sh create add_indexes '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤'"
            echo "  ./migrations/migration-manager.sh apply"
            echo "  ./migrations/migration-manager.sh rollback 001_initial_schema"
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./migrations/migration-manager.sh help"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"

