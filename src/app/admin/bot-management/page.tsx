"use client";

import { useAuth } from "@/hooks/useAuth";
import { useEffect, useState } from "react";

interface EnvSettings {
  bot_mode: string;
  webhook_url: string;
  auto_restart: boolean;
  bot_token: string;
  app_url: string;
}

interface DbStatus {
  bot_status: string;
  error_count: number;
  last_update_time: string;
}

interface BotSettings {
  envSettings: EnvSettings;
  dbStatus: DbStatus | null;
  source: string;
}

interface WebhookInfo {
  url: string;
  has_custom_certificate: boolean;
  pending_update_count: number;
  last_error_date?: number;
  last_error_message?: string;
  max_connections?: number;
  allowed_updates?: string[];
}

export default function BotManagementPage() {
  const { user, isAdmin, isLoading: authLoading } = useAuth();
  const [settings, setSettings] = useState<BotSettings | null>(null);
  const [webhookInfo, setWebhookInfo] = useState<WebhookInfo | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [webhookUrl, setWebhookUrl] = useState("");
  const [lastRefresh, setLastRefresh] = useState(new Date());

  // Early return if not authenticated or not admin
  if (authLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600 dark:text-gray-400">–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...</p>
        </div>
      </div>
    );
  }

  if (!user || !isAdmin) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-red-600 mb-4">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
          <p className="text-gray-600 dark:text-gray-400 mb-4">
            {!user ? "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" : "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"}
          </p>
          <a 
            href="/auth" 
            className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
          >
            –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
          </a>
        </div>
      </div>
    );
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ webhook URL
  useEffect(() => {
    if (!webhookUrl && typeof window !== "undefined") {
      const baseUrl = window.location.origin;
      setWebhookUrl(`${baseUrl}/api/bot/webhook`);
    }
  }, [webhookUrl]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const loadBotSettings = async () => {
    try {
      setIsLoading(true);
      setError(null);

      const response = await fetch("/api/admin/env-settings");
      const data = await response.json();

      if (data.success) {
        setSettings(data);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook URL –∏–∑ env –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º
        const envWebhookUrl = data.envSettings.webhook_url;
        if (envWebhookUrl) {
          setWebhookUrl(envWebhookUrl);
        } else if (typeof window !== "undefined") {
          const baseUrl = window.location.origin;
          setWebhookUrl(`${baseUrl}/api/bot/webhook`);
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        if (
          data.envSettings.bot_mode === "webhook" &&
          data.envSettings.webhook_url
        ) {
          try {
            const webhookResponse = await fetch("/api/admin/bot-mode");
            const webhookData = await webhookResponse.json();
            if (webhookData.webhookInfo) {
              setWebhookInfo(webhookData.webhookInfo);
            }
          } catch {
            console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook");
          }
        }

        setLastRefresh(new Date());
      } else {
        setError(data.error);
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫");
    } finally {
      setIsLoading(false);
    }
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ (—Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
  const switchMode = async (mode: "polling" | "webhook") => {
    const currentEnvMode = settings?.envSettings?.bot_mode;

    if (currentEnvMode === mode) {
      alert(`‚úÖ –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ "${mode}"`);
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const instructions =
      mode === "webhook"
        ? `–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ webhook —Ä–µ–∂–∏–º:

üìù –õ–û–ö–ê–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê:
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env.local
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_MODE=webhook
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_WEBHOOK_URL=${webhookUrl}
4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev

üöÄ –ü–†–û–î–ê–ö–®–ï–ù VERCEL:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard
2. Settings ‚Üí Environment Variables
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_MODE=webhook
4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_WEBHOOK_URL=${webhookUrl}
5. Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

‚ö†Ô∏è –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É`
        : `–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ polling —Ä–µ–∂–∏–º:

üìù –õ–û–ö–ê–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê:
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env.local
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_MODE=polling
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev

üöÄ –ü–†–û–î–ê–ö–®–ï–ù VERCEL:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard
2. Settings ‚Üí Environment Variables
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: BOT_MODE=polling
4. Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

‚ö†Ô∏è –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É`;

    alert(instructions);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
  const testWebhook = async () => {
    try {
      setError(null);
      const response = await fetch(webhookUrl);
      const data = await response.json();

      if (data.status === "ok") {
        alert(
          "‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n" +
            `Status: ${data.status}\n` +
            `Timestamp: ${data.timestamp}\n` +
            `Message: ${data.message}`,
        );
      } else {
        alert("‚ùå Webhook –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
      }
    } catch (err) {
      alert(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: ${err instanceof Error ? err.message : "Unknown error"}`,
      );
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)
  const updateSetting = async (key: string, value: string) => {
    const instructions = `–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ${key}:

üìù –õ–û–ö–ê–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê:
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env.local
2. –ù–∞–π–¥–∏—Ç–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ: ${key.toUpperCase()}=${value}
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev

üöÄ –ü–†–û–î–ê–ö–®–ï–ù VERCEL:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard
2. Settings ‚Üí Environment Variables
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: ${key.toUpperCase()}=${value}
4. Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

‚ö†Ô∏è –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É`;

    alert(instructions);
  };

  // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
  const restartBot = async () => {
    if (!confirm("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞? –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–µ—Ä–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.")) {
      return;
    }

    const currentMode = settings?.bot_mode as "polling" | "webhook";
    if (currentMode) {
      await switchMode(currentMode);
    }
  };

  useEffect(() => {
    if (isAdmin) {
      loadBotSettings();

      // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
      const interval = setInterval(() => {
        loadBotSettings();
      }, 30000);

      return () => clearInterval(interval);
    }
  }, [isAdmin]);

  if (!isAdmin) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center">
        <div className="bg-white rounded-lg shadow-lg p-8 max-w-md">
          <div className="text-center">
            <div className="text-6xl mb-4">üö´</div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω
            </h2>
            <p className="text-gray-600">
              –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±–æ—Ç–æ–º.
            </p>
          </div>
        </div>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center">
        <div className="bg-white rounded-lg shadow-lg p-8">
          <div className="text-center">
            <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞...</p>
          </div>
        </div>
      </div>
    );
  }

  const currentMode = settings?.envSettings?.bot_mode || "unknown";
  const botStatus = settings?.dbStatus?.bot_status || "inactive";
  const isPollingMode = currentMode === "polling";
  const isWebhookMode = currentMode === "webhook";
  const errorCount = settings?.dbStatus?.error_count || 0;
  const autoRestart = settings?.envSettings?.auto_restart || false;
  const botToken = settings?.envSettings?.bot_token || "–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω";

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="max-w-6xl mx-auto space-y-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –±–æ—Ç–æ–º
              </h1>
              <p className="text-gray-600">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (.env)
              </p>
              <div className="flex items-center mt-2 text-sm">
                <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded mr-2">
                  üìÑ –ò—Å—Ç–æ—á–Ω–∏–∫:{" "}
                  {settings?.source === "environment_variables"
                    ? "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
                    : "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"}
                </span>
                <span
                  className={`px-2 py-1 rounded ${
                    botToken === "***–Ω–∞—Å—Ç—Ä–æ–µ–Ω***"
                      ? "bg-green-100 text-green-800"
                      : "bg-red-100 text-red-800"
                  }`}
                >
                  üîë –¢–æ–∫–µ–Ω: {botToken}
                </span>
              </div>
            </div>
            <div className="text-right">
              <div className="text-sm text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</div>
              <div className="text-lg font-medium">
                {lastRefresh.toLocaleTimeString()}
              </div>
              <button
                onClick={loadBotSettings}
                className="mt-2 px-3 py-1 bg-blue-500 text-white text-sm rounded hover:bg-blue-600"
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>

        {/* –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6">
            üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="text-center">
              <div className="text-4xl mb-2">
                {currentMode === "polling" && "üîÑ"}
                {currentMode === "webhook" && "üîó"}
                {currentMode === "unknown" && "‚ùì"}
              </div>
              <div className="text-sm text-gray-500">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</div>
              <div
                className={`text-lg font-bold ${isPollingMode ? "text-blue-600" : isWebhookMode ? "text-green-600" : "text-gray-600"}`}
              >
                {currentMode === "polling" && "Polling"}
                {currentMode === "webhook" && "Webhook"}
                {currentMode === "unknown" && "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
              </div>
            </div>

            <div className="text-center">
              <div className="text-4xl mb-2">
                {botStatus === "active" && "‚úÖ"}
                {botStatus === "inactive" && "‚è∏Ô∏è"}
                {botStatus === "error" && "‚ùå"}
              </div>
              <div className="text-sm text-gray-500">–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</div>
              <div
                className={`text-lg font-bold ${
                  botStatus === "active"
                    ? "text-green-600"
                    : botStatus === "error"
                      ? "text-red-600"
                      : "text-gray-600"
                }`}
              >
                {botStatus === "active" && "–ê–∫—Ç–∏–≤–µ–Ω"}
                {botStatus === "inactive" && "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                {botStatus === "error" && "–û—à–∏–±–∫–∞"}
              </div>
            </div>

            <div className="text-center">
              <div
                className={`text-4xl mb-2 ${errorCount > 5 ? "animate-pulse" : ""}`}
              >
                {errorCount > 0 ? "‚ö†Ô∏è" : "‚úÖ"}
              </div>
              <div className="text-sm text-gray-500">–û—à–∏–±–∫–∏ –∑–∞ —á–∞—Å</div>
              <div
                className={`text-lg font-bold ${errorCount > 5 ? "text-red-600" : "text-green-600"}`}
              >
                {errorCount}
              </div>
            </div>

            <div className="text-center">
              <div className="text-4xl mb-2">{autoRestart ? "üîÑ" : "‚èπÔ∏è"}</div>
              <div className="text-sm text-gray-500">–ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫</div>
              <div
                className={`text-lg font-bold ${autoRestart ? "text-green-600" : "text-gray-600"}`}
              >
                {autoRestart ? "–í–∫–ª—é—á–µ–Ω" : "–í—ã–∫–ª—é—á–µ–Ω"}
              </div>
            </div>
          </div>
        </div>

        {/* –û—à–∏–±–∫–∏ */}
        {error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4">
            <div className="flex items-center">
              <div className="text-red-600 text-xl mr-3">‚ùå</div>
              <div>
                <div className="font-medium text-red-800">–û—à–∏–±–∫–∞</div>
                <div className="text-red-600">{error}</div>
              </div>
            </div>
          </div>
        )}

        {/* Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {isWebhookMode && webhookInfo && (
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">
              üîó –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Webhook
            </h2>

            <div className="bg-gray-50 rounded-lg p-4 space-y-3">
              <div>
                <span className="font-medium">URL:</span>
                <code className="ml-2 bg-gray-200 px-2 py-1 rounded text-sm">
                  {webhookInfo.url}
                </code>
              </div>
              <div>
                <span className="font-medium">–û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</span>
                <span className="ml-2">{webhookInfo.pending_update_count}</span>
              </div>
              <div>
                <span className="font-medium">–ú–∞–∫—Å–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π:</span>
                <span className="ml-2">{webhookInfo.max_connections}</span>
              </div>

              {webhookInfo.last_error_date && (
                <div className="bg-red-50 border border-red-200 rounded p-3 mt-4">
                  <div className="font-medium text-red-800">
                    –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:
                  </div>
                  <div className="text-sm text-gray-600">
                    {new Date(
                      webhookInfo.last_error_date * 1000,
                    ).toLocaleString()}
                  </div>
                  <div className="text-red-600 mt-1">
                    {webhookInfo.last_error_message}
                  </div>
                </div>
              )}
            </div>
          </div>
        )}

        {/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Polling —Ä–µ–∂–∏–º */}
          <div
            className={`bg-white rounded-lg shadow-lg overflow-hidden border-2 ${
              isPollingMode ? "border-blue-500" : "border-gray-200"
            }`}
          >
            <div
              className={`p-4 ${isPollingMode ? "bg-blue-50" : "bg-gray-50"}`}
            >
              <div className="flex items-center justify-between">
                <div className="flex items-center">
                  <div className="text-3xl mr-3">üîÑ</div>
                  <div>
                    <h3 className="text-lg font-semibold text-gray-900">
                      Polling —Ä–µ–∂–∏–º
                    </h3>
                    <p className="text-sm text-gray-600">
                      –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏
                    </p>
                  </div>
                </div>
                {isPollingMode && (
                  <div className="bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                    ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
                  </div>
                )}
              </div>
            </div>

            <div className="p-6">
              <div className="space-y-4">
                <div>
                  <h4 className="font-medium text-gray-900 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                  <p className="text-gray-600 text-sm">
                    –ë–æ—Ç –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç Telegram —Å–µ—Ä–≤–µ—Ä –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è
                    –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
                  </p>
                </div>

                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <div className="font-medium text-green-600">
                      ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
                    </div>
                    <ul className="text-gray-600 mt-1 space-y-1">
                      <li>‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</li>
                      <li>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ</li>
                      <li>‚Ä¢ –ù–µ —Ç—Ä–µ–±—É–µ—Ç HTTPS</li>
                      <li>‚Ä¢ –õ–µ–≥–∫–∞—è –æ—Ç–ª–∞–¥–∫–∞</li>
                    </ul>
                  </div>
                  <div>
                    <div className="font-medium text-red-600">
                      ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
                    </div>
                    <ul className="text-gray-600 mt-1 space-y-1">
                      <li>‚Ä¢ –ë–æ–ª—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤</li>
                      <li>‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ 1-3 —Å–µ–∫</li>
                      <li>‚Ä¢ –õ–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤</li>
                    </ul>
                  </div>
                </div>

                <div className="pt-4 border-t">
                  <button
                    onClick={() => switchMode("polling")}
                    disabled={isPollingMode}
                    className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${
                      isPollingMode
                        ? "bg-blue-100 text-blue-600 cursor-not-allowed"
                        : "bg-blue-500 text-white hover:bg-blue-600"
                    }`}
                  >
                    {isPollingMode
                      ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω"
                      : "üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"}
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* Webhook —Ä–µ–∂–∏–º */}
          <div
            className={`bg-white rounded-lg shadow-lg overflow-hidden border-2 ${
              isWebhookMode ? "border-green-500" : "border-gray-200"
            }`}
          >
            <div
              className={`p-4 ${isWebhookMode ? "bg-green-50" : "bg-gray-50"}`}
            >
              <div className="flex items-center justify-between">
                <div className="flex items-center">
                  <div className="text-3xl mr-3">üîó</div>
                  <div>
                    <h3 className="text-lg font-semibold text-gray-900">
                      Webhook —Ä–µ–∂–∏–º
                    </h3>
                    <p className="text-sm text-gray-600">–î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞</p>
                  </div>
                </div>
                {isWebhookMode && (
                  <div className="bg-green-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                    ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω
                  </div>
                )}
              </div>
            </div>

            <div className="p-6">
              <div className="space-y-4">
                <div>
                  <h4 className="font-medium text-gray-900 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                  <p className="text-gray-600 text-sm">
                    Telegram –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑
                    HTTPS.
                  </p>
                </div>

                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <div className="font-medium text-green-600">
                      ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
                    </div>
                    <ul className="text-gray-600 mt-1 space-y-1">
                      <li>‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã</li>
                      <li>‚Ä¢ –ú–µ–Ω—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤</li>
                      <li>‚Ä¢ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å</li>
                      <li>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è</li>
                    </ul>
                  </div>
                  <div>
                    <div className="font-medium text-red-600">
                      ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
                    </div>
                    <ul className="text-gray-600 mt-1 space-y-1">
                      <li>‚Ä¢ –¢—Ä–µ–±—É–µ—Ç HTTPS</li>
                      <li>‚Ä¢ –°–ª–æ–∂–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</li>
                      <li>‚Ä¢ –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞</li>
                    </ul>
                  </div>
                </div>

                {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook URL */}
                <div className="pt-4 border-t">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Webhook URL:
                  </label>
                  <div className="flex gap-2 mb-4">
                    <input
                      type="url"
                      value={webhookUrl}
                      onChange={(e) => setWebhookUrl(e.target.value)}
                      placeholder="https://your-app.vercel.app/api/bot/webhook"
                      className="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                    />
                    <button
                      onClick={testWebhook}
                      className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 text-sm"
                    >
                      üß™ –¢–µ—Å—Ç
                    </button>
                  </div>

                  <button
                    onClick={() => switchMode("webhook")}
                    disabled={isWebhookMode}
                    className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${
                      isWebhookMode
                        ? "bg-green-100 text-green-600 cursor-not-allowed"
                        : "bg-green-500 text-white hover:bg-green-600"
                    }`}
                  >
                    {isWebhookMode
                      ? "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω"
                      : "üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"}
                  </button>

                  {!webhookUrl && (
                    <p className="text-xs text-red-500 mt-2">
                      ‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HTTPS URL –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ webhook
                      —Ä–µ–∂–∏–º–∞
                    </p>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6">
            ‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </h2>

          <div className="space-y-4">
            <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
              <div>
                <div className="font-medium text-gray-900">
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
                </div>
                <div className="text-sm text-gray-600">
                  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
                </div>
              </div>
              <button
                onClick={() =>
                  updateSetting("bot_auto_restart", (!autoRestart).toString())
                }
                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${
                  autoRestart ? "bg-blue-600" : "bg-gray-200"
                }`}
              >
                <span
                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                    autoRestart ? "translate-x-6" : "translate-x-1"
                  }`}
                />
              </button>
            </div>
          </div>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6">
            üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º
          </h2>

          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <button
              onClick={restartBot}
              disabled={isSwitching || botStatus === "inactive"}
              className="p-4 bg-orange-500 text-white rounded-lg hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed text-center"
            >
              <div className="text-2xl mb-2">üîÑ</div>
              <div className="font-medium">–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫</div>
              <div className="text-xs opacity-80">–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞</div>
            </button>

            <button
              onClick={() => updateSetting("error_count", "0")}
              disabled={errorCount === 0}
              className="p-4 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 disabled:opacity-50 disabled:cursor-not-allowed text-center"
            >
              <div className="text-2xl mb-2">üßπ</div>
              <div className="font-medium">–°–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫–∏</div>
              <div className="text-xs opacity-80">–û–±–Ω—É–ª–∏—Ç—å —Å—á–µ—Ç—á–∏–∫</div>
            </button>

            <button
              onClick={() => window.open("/api/bot/webhook", "_blank")}
              className="p-4 bg-purple-500 text-white rounded-lg hover:bg-purple-600 text-center"
            >
              <div className="text-2xl mb-2">üß™</div>
              <div className="font-medium">–¢–µ—Å—Ç Webhook</div>
              <div className="text-xs opacity-80">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å endpoint</div>
            </button>

            <button
              onClick={loadBotSettings}
              className="p-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 text-center"
            >
              <div className="text-2xl mb-2">üìä</div>
              <div className="font-medium">–û–±–Ω–æ–≤–∏—Ç—å</div>
              <div className="text-xs opacity-80">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—É—Å</div>
            </button>
          </div>
        </div>

        {/* –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-blue-50 rounded-lg shadow-lg p-6 border border-blue-200">
          <h2 className="text-xl font-semibold text-blue-900 mb-4">
            üí° –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="font-medium text-blue-900 mb-2">
                üîÑ Polling —Ä–µ–∂–∏–º
              </h3>
              <ul className="text-blue-800 text-sm space-y-1">
                <li>‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</li>
                <li>‚Ä¢ –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –æ—Ç–ª–∞–¥–∫–∞</li>
                <li>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ HTTPS</li>
                <li>‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
              </ul>
            </div>

            <div>
              <h3 className="font-medium text-blue-900 mb-2">
                üîó Webhook —Ä–µ–∂–∏–º
              </h3>
              <ul className="text-blue-800 text-sm space-y-1">
                <li>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞</li>
                <li>‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</li>
                <li>‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
                <li>‚Ä¢ –¢—Ä–µ–±—É–µ—Ç HTTPS URL</li>
              </ul>
            </div>
          </div>

          <div className="mt-6 p-4 bg-blue-100 rounded-lg">
            <div className="font-medium text-blue-900 mb-2">
              üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
            </div>
            <div className="text-blue-800 text-sm space-y-1">
              <div>
                ‚Ä¢ <strong>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ polling —Ä–µ–∂–∏–º
              </div>
              <div>
                ‚Ä¢ <strong>–ü—Ä–æ–¥–∞–∫—à–µ–Ω:</strong> –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ webhook
              </div>
              <div>
                ‚Ä¢ <strong>–û—Ç–ª–∞–¥–∫–∞:</strong> –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∏—Ç–µ polling –¥–ª—è
                –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
              </div>
              <div>
                ‚Ä¢ <strong>–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞:</strong> Webhook –æ–±–µ—Å–ø–µ—á–∏—Ç –ª—É—á—à—É—é
                –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
              </div>
            </div>
          </div>
        </div>

        {/* –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        {settings?.dbStatus?.last_update_time && (
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">
              ‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </h2>
            <div className="text-gray-600">
              <strong>–í—Ä–µ–º—è:</strong>{" "}
              {new Date(settings.dbStatus.last_update_time).toLocaleString()}
            </div>
            <div className="text-sm text-gray-500 mt-1">
              (
              {Math.round(
                (Date.now() -
                  new Date(settings.dbStatus.last_update_time).getTime()) /
                  60000,
              )}{" "}
              –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥)
            </div>
          </div>
        )}

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —á–µ—Ä–µ–∑ .env */}
        <div className="bg-yellow-50 rounded-lg shadow-lg p-6 border border-yellow-200">
          <h2 className="text-xl font-semibold text-yellow-900 mb-4">
            üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          </h2>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <div>
              <h3 className="font-medium text-yellow-900 mb-3">
                üíª –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (.env.local)
              </h3>
              <div className="bg-yellow-100 rounded-lg p-4">
                <pre className="text-sm text-yellow-800 whitespace-pre-wrap">{`# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
BOT_MODE=polling

# URL –¥–ª—è webhook (–Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è polling)
BOT_WEBHOOK_URL=

# –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
BOT_AUTO_RESTART=true

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN=your-bot-token`}</pre>
              </div>
              <div className="mt-3 text-sm text-yellow-700">
                ‚ö†Ô∏è –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ:{" "}
                <code className="bg-yellow-200 px-1 rounded">npm run dev</code>
              </div>
            </div>

            <div>
              <h3 className="font-medium text-yellow-900 mb-3">
                üöÄ –ü—Ä–æ–¥–∞–∫—à–µ–Ω Vercel
              </h3>
              <div className="bg-yellow-100 rounded-lg p-4">
                <div className="text-sm text-yellow-800 space-y-2">
                  <div>
                    <strong>1.</strong> –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard
                  </div>
                  <div>
                    <strong>2.</strong> Settings ‚Üí Environment Variables
                  </div>
                  <div>
                    <strong>3.</strong> –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
                  </div>
                  <div className="ml-4 font-mono text-xs">
                    <div>BOT_MODE=webhook</div>
                    <div>
                      BOT_WEBHOOK_URL=https://your-app.vercel.app/api/bot/webhook
                    </div>
                    <div>BOT_AUTO_RESTART=true</div>
                    <div>TELEGRAM_BOT_TOKEN=your-bot-token</div>
                  </div>
                  <div>
                    <strong>4.</strong> Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                  </div>
                </div>
              </div>
              <div className="mt-3 text-sm text-yellow-700">
                ‚ö†Ô∏è –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω—É–∂–µ–Ω redeploy
              </div>
            </div>
          </div>

          <div className="mt-6 p-4 bg-yellow-100 rounded-lg">
            <div className="font-medium text-yellow-900 mb-2">
              üéØ –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:
            </div>
            <div className="text-yellow-800 text-sm space-y-1">
              <div>
                <strong>Polling —Ä–µ–∂–∏–º:</strong> <code>BOT_MODE=polling</code>
              </div>
              <div>
                <strong>Webhook —Ä–µ–∂–∏–º:</strong> <code>BOT_MODE=webhook</code> +{" "}
                <code>BOT_WEBHOOK_URL=https://...</code>
              </div>
              <div>
                <strong>–ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫:</strong>{" "}
                <code>BOT_AUTO_RESTART=true</code>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
