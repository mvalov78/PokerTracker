"use client";

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞
 */

import { useState } from "react";

export default function BotSetupPage() {
  const [token, setToken] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [message, setMessage] = useState("");

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!token.trim()) {
      setMessage("‚ùå –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞");
      return;
    }

    setIsLoading(true);
    setMessage("");

    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ Telegram API
      setMessage(`‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –û–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env.local:
TELEGRAM_BOT_TOKEN=${token}

–ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.`);
    } catch (error) {
      setMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-gray-50 dark:bg-gray-900 min-h-screen">
      <div className="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">
            ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –ë–æ—Ç–∞
          </h1>
          <p className="text-gray-600 dark:text-gray-400">
            –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –æ—Ç BotFather –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞
          </p>
        </div>

        {/* Instructions */}
        <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6 mb-8">
          <h2 className="text-lg font-semibold text-blue-900 dark:text-blue-100 mb-3">
            üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞:
          </h2>
          <ol className="space-y-2 text-blue-800 dark:text-blue-200 text-sm">
            <li>
              1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞{" "}
              <code className="bg-blue-100 dark:bg-blue-800 px-1 rounded">
                @BotFather
              </code>
            </li>
            <li>
              2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É{" "}
              <code className="bg-blue-100 dark:bg-blue-800 px-1 rounded">
                /newbot
              </code>
            </li>
            <li>3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞</li>
            <li>
              4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω (—Ñ–æ—Ä–º–∞—Ç:{" "}
              <code className="bg-blue-100 dark:bg-blue-800 px-1 rounded">
                123456789:ABCdefGhiJklmNoPQRsTuVwXyZ
              </code>
              )
            </li>
            <li>5. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ –Ω–∏–∂–µ</li>
          </ol>
        </div>

        {/* Token Form */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label
                htmlFor="token"
                className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
              >
                –¢–æ–∫–µ–Ω –±–æ—Ç–∞:
              </label>
              <input
                type="text"
                id="token"
                value={token}
                onChange={(e) => setToken(e.target.value)}
                placeholder="123456789:ABCdefGhiJklmNoPQRsTuVwXyZ"
                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white font-mono text-sm"
                disabled={isLoading}
              />
            </div>

            <button
              type="submit"
              disabled={isLoading || !token.trim()}
              className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
            >
              {isLoading ? "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞..." : "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω"}
            </button>
          </form>

          {message && (
            <div className="mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
              <pre className="text-sm text-gray-800 dark:text-gray-200 whitespace-pre-wrap">
                {message}
              </pre>
            </div>
          )}
        </div>

        {/* Current Status */}
        <div className="mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
            üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          </h3>

          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <span className="text-gray-600 dark:text-gray-400">–†–µ–∂–∏–º:</span>
              <span className="text-gray-900 dark:text-white font-mono">
                Polling (Long Polling)
              </span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-gray-600 dark:text-gray-400">–¢–æ–∫–µ–Ω:</span>
              <span className="text-gray-900 dark:text-white">
                {process.env.NEXT_PUBLIC_BOT_TOKEN ? "–ù–∞—Å—Ç—Ä–æ–µ–Ω" : "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"}
              </span>
            </div>
            <div className="flex justify-between items-center">
              <span className="text-gray-600 dark:text-gray-400">
                –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:
              </span>
              <span className="text-green-600 dark:text-green-400">
                Telegraf ‚úÖ
              </span>
            </div>
          </div>

          <div className="mt-4 pt-4 border-t border-gray-200 dark:border-gray-600">
            <div className="flex space-x-3">
              <a
                href="/admin/bot"
                className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
              >
                üéõÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
              </a>
              <a
                href="/"
                className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
              >
                üè† –ì–ª–∞–≤–Ω–∞—è
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
