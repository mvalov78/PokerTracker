"use client";

import { useRouter } from "next/navigation";
import { useState } from "react";

export default function BankrollPage() {
  const router = useRouter();
  const [showAddForm, setShowAddForm] = useState(false);
  const [amount, setAmount] = useState("");
  const [description, setDescription] = useState("");
  const [type, setType] = useState<"deposit" | "withdrawal">("deposit");

  // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  const mockTransactions = [
    {
      id: "1",
      amount: 1000,
      type: "deposit" as const,
      description: "–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç",
      date: "2024-01-01",
      balance: 1000,
    },
    {
      id: "2",
      amount: -215,
      type: "withdrawal" as const,
      description: "Sunday Million –±–∞–π-–∏–Ω",
      date: "2024-01-15",
      balance: 785,
    },
    {
      id: "3",
      amount: 1250,
      type: "deposit" as const,
      description: "–í—ã–∏–≥—Ä—ã—à –≤ Sunday Million",
      date: "2024-01-15",
      balance: 2035,
    },
  ];

  const currentBalance =
    mockTransactions[mockTransactions.length - 1]?.balance || 0;
  const totalDeposits = mockTransactions
    .filter((t) => t.type === "deposit")
    .reduce((sum, t) => sum + t.amount, 0);
  const totalWithdrawals = Math.abs(
    mockTransactions
      .filter((t) => t.type === "withdrawal")
      .reduce((sum, t) => sum + t.amount, 0),
  );

  const handleAddTransaction = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    setShowAddForm(false);
    setAmount("");
    setDescription("");
  };

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-2">
            üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–∫—Ä–æ–ª–ª–æ–º
          </h1>
          <p className="text-gray-600">
            –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤, –≤—ã–≤–æ–¥–æ–≤ –∏ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
          </p>
        </div>

        {/* Balance Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-3xl font-bold text-blue-600 mb-2">
              ${currentBalance}
            </div>
            <div className="text-gray-600">–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</div>
          </div>

          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              ${totalDeposits}
            </div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–æ–≤</div>
          </div>

          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-3xl font-bold text-red-600 mb-2">
              ${totalWithdrawals}
            </div>
            <div className="text-gray-600">–í—Å–µ–≥–æ –≤—ã–≤–æ–¥–æ–≤</div>
          </div>

          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div
              className={`text-3xl font-bold mb-2 ${
                (currentBalance - totalDeposits) >= 0
                  ? "text-green-600"
                  : "text-red-600"
              }`}
            >
              ${currentBalance - totalDeposits}
            </div>
            <div className="text-gray-600">–ü—Ä–∏–±—ã–ª—å/–£–±—ã—Ç–æ–∫</div>
          </div>
        </div>

        {/* Actions */}
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <h2 className="text-xl font-semibold text-gray-900">
              –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–Ω–∫—Ä–æ–ª–ª–æ–º
            </h2>
            <div className="flex gap-3">
              <button
                onClick={() => setShowAddForm(!showAddForm)}
                className="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors"
              >
                ‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é
              </button>
              <button
                onClick={() => router.push("/analytics")}
                className="bg-purple-500 text-white px-6 py-2 rounded-lg hover:bg-purple-600 transition-colors"
              >
                üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
              </button>
            </div>
          </div>

          {/* Add Transaction Form */}
          {showAddForm && (
            <div className="mt-6 p-4 bg-gray-50 rounded-lg">
              <h3 className="text-lg font-semibold mb-4">–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é</h3>
              <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
                  </label>
                  <select
                    value={type}
                    onChange={(e) =>
                      setType(e.target.value as "deposit" | "withdrawal")
                    }
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  >
                    <option value="deposit">–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</option>
                    <option value="withdrawal">–í—ã–≤–æ–¥</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –°—É–º–º–∞ ($)
                  </label>
                  <input
                    type="number"
                    value={amount}
                    onChange={(e) => setAmount(e.target.value)}
                    placeholder="0.00"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–ø–∏—Å–∞–Ω–∏–µ
                  </label>
                  <input
                    type="text"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                  />
                </div>

                <div className="flex items-end gap-2">
                  <button
                    onClick={handleAddTransaction}
                    className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
                  >
                    –î–æ–±–∞–≤–∏—Ç—å
                  </button>
                  <button
                    onClick={() => setShowAddForm(false)}
                    className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Transactions History */}
        <div className="bg-white rounded-lg shadow">
          <div className="p-6 border-b border-gray-200">
            <h2 className="text-xl font-semibold text-gray-900">
              –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
            </h2>
          </div>

          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–∞—Ç–∞
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –¢–∏–ø
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –û–ø–∏—Å–∞–Ω–∏–µ
                  </th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—É–º–º–∞
                  </th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ë–∞–ª–∞–Ω—Å
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {mockTransactions.map((transaction) => (
                  <tr key={transaction.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {new Date(transaction.date).toLocaleDateString("ru-RU")}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span
                        className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                          transaction.type === "deposit"
                            ? "bg-green-100 text-green-800"
                            : "bg-red-100 text-red-800"
                        }`}
                      >
                        {transaction.type === "deposit"
                          ? "üìà –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"
                          : "üìâ –í—ã–≤–æ–¥"}
                      </span>
                    </td>
                    <td className="px-6 py-4 text-sm text-gray-900">
                      {transaction.description}
                    </td>
                    <td
                      className={`px-6 py-4 whitespace-nowrap text-sm text-right font-semibold ${
                        transaction.amount >= 0
                          ? "text-green-600"
                          : "text-red-600"
                      }`}
                    >
                      {transaction.amount >= 0 ? "+" : ""}${transaction.amount}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right font-semibold">
                      ${transaction.balance}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Back to Home */}
        <div className="mt-8 text-center">
          <button
            onClick={() => router.push("/")}
            className="bg-gray-500 text-white px-6 py-3 rounded-lg hover:bg-gray-600 transition-colors"
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    </div>
  );
}
