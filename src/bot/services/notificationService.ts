/**
 * –°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Telegram –±–æ—Ç–∞
 */

import { getTournamentsByUser, calculateUserStats } from "../../data/mockData";

export interface NotificationSettings {
  userId: string;
  reminders: boolean;
  weeklyStats: boolean;
  achievements: boolean;
  tournamentStart: boolean;
  results: boolean;
}

export class NotificationService {
  private settings: Map<string, NotificationSettings> = new Map();

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  getUserSettings(userId: string): NotificationSettings {
    return (
      this.settings.get(userId) || {
        userId,
        reminders: true,
        weeklyStats: true,
        achievements: true,
        tournamentStart: true,
        results: true,
      }
    );
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  updateUserSettings(userId: string, settings: Partial<NotificationSettings>) {
    const current = this.getUserSettings(userId);
    const updated = { ...current, ...settings };
    this.settings.set(userId, updated);
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  toggleNotification(
    userId: string,
    type: keyof NotificationSettings,
  ): boolean {
    const settings = this.getUserSettings(userId);
    if (type === "userId") return false;

    const newValue = !settings[type];
    this.updateUserSettings(userId, { [type]: newValue });
    return newValue;
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º —Ç—É—Ä–Ω–∏—Ä–µ
   */
  createTournamentReminder(
    tournamentName: string,
    date: Date,
    venue?: string,
  ): string {
    const dateStr = date.toLocaleDateString("ru-RU", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });

    return `
üé∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç—É—Ä–Ω–∏—Ä–µ!**

üìÖ **${tournamentName}**
‚è∞ ${dateStr}
${venue ? `üè® ${venue}` : ""}

üéØ **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç—É—Ä–Ω–∏—Ä—É:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–Ω–∫—Ä–æ–ª–ª
‚Ä¢ –ò–∑—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ—Å—å –Ω–∞ –∏–≥—Ä—É

–£–¥–∞—á–∏ –∑–∞ —Å—Ç–æ–ª–∞–º–∏! üçÄ
    `.trim();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ —Ç—É—Ä–Ω–∏—Ä–∞
   */
  createTournamentStartNotification(tournamentName: string): string {
    return `
üöÄ **–¢—É—Ä–Ω–∏—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!**

üé∞ **${tournamentName}**

‚ö° **–í—Ä–µ–º—è –∏–≥—Ä–∞—Ç—å:**
‚Ä¢ –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –∏–≥—Ä–µ
‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–µ–∫–∞–º–∏
‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ—Å—å –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ

–ü–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –ª—É—á—à–∏–π –ø–æ–∫–µ—Ä! üí™
    `.trim();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
   */
  createWeeklyStatsReport(userId: string): string {
    const stats = calculateUserStats(userId);
    const tournaments = getTournamentsByUser(userId);

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç—É—Ä–Ω–∏—Ä—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
    const weekAgo = new Date();
    weekAgo.setDate(weekAgo.getDate() - 7);

    const weeklyTournaments = tournaments.filter(
      (t) => new Date(t.date) >= weekAgo && t.result,
    );

    if (weeklyTournaments.length === 0) {
      return `
üìä **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç**

–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤—ã –Ω–µ –∏–≥—Ä–∞–ª–∏ —Ç—É—Ä–Ω–∏—Ä—ã.

üéØ **–°–æ–≤–µ—Ç:** –†–µ–≥—É–ª—è—Ä–Ω–∞—è –∏–≥—Ä–∞ –ø–æ–º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!
      `.trim();
    }

    const weeklyStats = {
      tournaments: weeklyTournaments.length,
      totalBuyin: weeklyTournaments.reduce((sum, t) => sum + t.buyin, 0),
      totalWinnings: weeklyTournaments.reduce(
        (sum, t) => sum + (t.result?.payout || 0),
        0,
      ),
      bestPosition: Math.min(
        ...weeklyTournaments.map((t) => t.result?.position || Infinity),
      ),
      itmCount: weeklyTournaments.filter((t) => (t.result?.payout || 0) > 0)
        .length,
    };

    const weeklyProfit = weeklyStats.totalWinnings - weeklyStats.totalBuyin;
    const weeklyROI =
      weeklyStats.totalBuyin > 0
        ? (weeklyProfit / weeklyStats.totalBuyin) * 100
        : 0;
    const itmRate =
      weeklyStats.tournaments > 0
        ? (weeklyStats.itmCount / weeklyStats.tournaments) * 100
        : 0;

    const profitText =
      weeklyProfit > 0 ? `+$${weeklyProfit}` : `-$${Math.abs(weeklyProfit)}`;
    const roiText =
      weeklyROI > 0 ? `+${weeklyROI.toFixed(1)}%` : `${weeklyROI.toFixed(1)}%`;

    return `
üìä **–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç**

üé∞ **–¢—É—Ä–Ω–∏—Ä—ã:** ${weeklyStats.tournaments}
üíµ **–ë–∞–π-–∏–Ω:** $${weeklyStats.totalBuyin}
üí∞ **–í—ã–∏–≥—Ä—ã—à:** $${weeklyStats.totalWinnings}
üìà **–ü—Ä–∏–±—ã–ª—å:** ${profitText}
üìä **ROI:** ${roiText}
üèÜ **ITM Rate:** ${itmRate.toFixed(1)}%
ü•á **–õ—É—á—à–µ–µ –º–µ—Å—Ç–æ:** ${weeklyStats.bestPosition === Infinity ? "–ù–µ—Ç" : weeklyStats.bestPosition}

**–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
üéØ –í—Å–µ–≥–æ —Ç—É—Ä–Ω–∏—Ä–æ–≤: ${stats.totalTournaments}
üíé –û–±—â–∏–π ROI: ${stats.roi > 0 ? `+${stats.roi.toFixed(1)}%` : `${stats.roi.toFixed(1)}%`}

${weeklyROI > 0 ? "üöÄ –û—Ç–ª–∏—á–Ω–∞—è –Ω–µ–¥–µ–ª—è!" : "üí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –∏–≥—Ä–æ–π!"}
    `.trim();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
   */
  createAchievementNotification(
    achievement: string,
    description: string,
  ): string {
    const achievements = {
      first_win: "üèÜ –ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞!",
      profit_milestone: "üí∞ –†—É–±–µ–∂ –ø—Ä–∏–±—ã–ª–∏!",
      roi_milestone: "üìà ROI —Ä–µ–∫–æ—Ä–¥!",
      tournament_streak: "üî• –°–µ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤!",
      itm_streak: "üéØ ITM —Å–µ—Ä–∏—è!",
      big_win: "üíé –ö—Ä—É–ø–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à!",
      volume_milestone: "üìä –û–±—ä–µ–º –∏–≥—Ä—ã!",
    };

    const title =
      achievements[achievement as keyof typeof achievements] ||
      "üéâ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!";

    return `
üéâ **–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!**

${title}

${description}

–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üöÄ
    `.trim();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   */
  createResultReminderNotification(
    tournamentName: string,
    daysAgo: number,
  ): string {
    return `
‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ**

üé∞ **${tournamentName}**
üìÖ –ü—Ä–æ—à–ª–æ –¥–Ω–µ–π: ${daysAgo}

–ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç—É—Ä–Ω–∏—Ä–∞!
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /result

üìä –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.
    `.trim();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Ç—É—Ä–Ω–∏—Ä–∞—Ö
   */
  createUpcomingTournamentsNotification(tournaments: any[]): string {
    if (tournaments.length === 0) {
      return `
üìÖ **–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Ç—É—Ä–Ω–∏—Ä—ã**

–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤.

üéØ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Ç—É—Ä–Ω–∏—Ä—ã –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ /register
    `.trim();
    }

    let message = "üìÖ **–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Ç—É—Ä–Ω–∏—Ä—ã**\n\n";

    tournaments.slice(0, 5).forEach((tournament, index) => {
      const date = new Date(tournament.date);
      const dateStr = date.toLocaleDateString("ru-RU");
      const timeStr = date.toLocaleTimeString("ru-RU", {
        hour: "2-digit",
        minute: "2-digit",
      });

      message += `${index + 1}. **${tournament.name}**\n`;
      message += `   üìÖ ${dateStr} –≤ ${timeStr}\n`;
      message += `   üíµ $${tournament.buyin} | üè® ${tournament.venue}\n\n`;
    });

    message += "–£–¥–∞—á–∏ –≤ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä–∞—Ö! üçÄ";

    return message.trim();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  shouldSendNotification(
    userId: string,
    type: keyof NotificationSettings,
  ): boolean {
    const settings = this.getUserSettings(userId);
    return settings[type] as boolean;
  }

  /**
   * –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  scheduleNotifications(userId: string) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    // —á–µ—Ä–µ–∑ cron jobs –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏
    console.log(`–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  createTestNotification(): string {
    return `
üß™ **–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ**

–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

üîî –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:
‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—É—Ä–Ω–∏—Ä–∞—Ö
‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É  
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö

‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ /settings
    `.trim();
  }
}
