/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
 */

export interface BotConfig {
  token: string;
  webhookUrl?: string;
  webhookSecret?: string;
  apiUrl: string;
  allowedUsers?: string[];
  rateLimit: {
    maxRequests: number;
    windowMs: number;
  };
  features: {
    ocrEnabled: boolean;
    notificationsEnabled: boolean;
    analyticsEnabled: boolean;
  };
  messages: {
    welcome: string;
    help: string;
    errors: {
      generic: string;
      unauthorized: string;
      rateLimit: string;
      ocrFailed: string;
    };
  };
}

export const defaultBotConfig: BotConfig = {
  token: process.env.TELEGRAM_BOT_TOKEN || "mock-bot-token",
  webhookUrl: undefined, // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ polling —Ä–µ–∂–∏–º–µ
  webhookSecret: undefined, // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ polling —Ä–µ–∂–∏–º–µ
  apiUrl: process.env.NEXT_PUBLIC_API_URL || "http://localhost:3000/api",

  rateLimit: {
    maxRequests: 30, // 30 –∑–∞–ø—Ä–æ—Å–æ–≤
    windowMs: 60000, // –∑–∞ 1 –º–∏–Ω—É—Ç—É
  },

  features: {
    ocrEnabled: true,
    notificationsEnabled: true,
    analyticsEnabled: true,
  },

  messages: {
    welcome: `
üé∞ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PokerTracker Pro Bot!**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤ –ø–æ –ø–æ–∫–µ—Ä—É:

üîπ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ —Ç—É—Ä–Ω–∏—Ä—ã —á–µ—Ä–µ–∑ —Ñ–æ—Ç–æ –±–∏–ª–µ—Ç–∞
üîπ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ  
üîπ –ü–æ–ª—É—á–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É
üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.
    `,

    help: `
ü§ñ **–ö–æ–º–∞–Ω–¥—ã PokerTracker Pro Bot:**

**üìù –¢—É—Ä–Ω–∏—Ä—ã:**
/register - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä
/result - –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
/tournaments - –°–ø–∏—Å–æ–∫ —Ç—É—Ä–Ω–∏—Ä–æ–≤

**üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

**‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

**üì∑ –§–æ—Ç–æ –±–∏–ª–µ—Ç–æ–≤:**
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–∏–ª–µ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç—É—Ä–Ω–∏—Ä–∞.
    `,

    errors: {
      generic:
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
      unauthorized: "üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.",
      rateLimit:
        "‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      ocrFailed:
        "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±–∏–ª–µ—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ.",
    },
  },
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
 */
export function getBotConfig(): BotConfig {
  return {
    ...defaultBotConfig,
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token: process.env.TELEGRAM_BOT_TOKEN || defaultBotConfig.token,
    webhookUrl: process.env.TELEGRAM_WEBHOOK_URL,
    webhookSecret: process.env.TELEGRAM_WEBHOOK_SECRET,
    apiUrl: process.env.NEXT_PUBLIC_API_URL || defaultBotConfig.apiUrl,

    // –ü–∞—Ä—Å–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    allowedUsers: process.env.TELEGRAM_ALLOWED_USERS?.split(",").map((id) =>
      id.trim(),
    ),

    features: {
      ocrEnabled: process.env.BOT_OCR_ENABLED !== "false",
      notificationsEnabled: process.env.BOT_NOTIFICATIONS_ENABLED !== "false",
      analyticsEnabled: process.env.BOT_ANALYTICS_ENABLED !== "false",
    },
  };
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
 */
export function validateBotConfig(config: BotConfig): {
  valid: boolean;
  errors: string[];
} {
  const errors: string[] = [];

  if (!config.token || config.token === "mock-bot-token") {
    errors.push("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–µ");
  }

  if (config.rateLimit.maxRequests <= 0) {
    errors.push("rateLimit.maxRequests –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º");
  }

  if (config.rateLimit.windowMs <= 0) {
    errors.push("rateLimit.windowMs –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º");
  }

  if (!config.apiUrl) {
    errors.push("apiUrl –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
  }

  return {
    valid: errors.length === 0,
    errors,
  };
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
 */
export function logBotConfig(config: BotConfig) {
  console.warn("ü§ñ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞:");
  console.warn(`  - Webhook URL: ${config.webhookUrl || "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"}`);
  console.warn(`  - API URL: ${config.apiUrl}`);
  console.warn(`  - OCR –≤–∫–ª—é—á–µ–Ω: ${config.features.ocrEnabled}`);
  console.warn(
    `  - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: ${config.features.notificationsEnabled}`,
  );
  console.warn(`  - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞: ${config.features.analyticsEnabled}`);
  console.warn(
    `  - Rate limit: ${config.rateLimit.maxRequests} –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ ${config.rateLimit.windowMs}ms`,
  );

  if (config.allowedUsers) {
    console.warn(
      `  - –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${config.allowedUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`,
    );
  } else {
    console.warn("  - –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏");
  }
}
