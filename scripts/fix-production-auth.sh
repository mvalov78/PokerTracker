#!/bin/bash

# üîß PokerTracker Pro - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ

set -e

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
echo "================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_production_env() {
    echo -e "\n${BLUE}üìù –°–æ–∑–¥–∞–Ω–∏–µ production .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://poker-tracker.vercel.app):${NC}"
    read -r PRODUCTION_URL
    
    if [ -z "$PRODUCTION_URL" ]; then
        echo -e "${RED}‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
        exit 1
    fi
    
    # –£–±–∏—Ä–∞–µ–º trailing slash –µ—Å–ª–∏ –µ—Å—Ç—å
    PRODUCTION_URL=${PRODUCTION_URL%/}
    
    # –°–æ–∑–¥–∞–µ–º .env.production
    cat > .env.production << EOF
# Production Environment Variables for PokerTracker Pro
# Copy these to Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables

# App Configuration
NEXT_PUBLIC_APP_URL=$PRODUCTION_URL

# Supabase Configuration (copy from your Supabase Dashboard)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# Google OAuth (optional - get from Google Cloud Console)
NEXT_PUBLIC_GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=your-telegram-bot-token

# Bot Mode Configuration for Production
BOT_MODE=webhook
BOT_WEBHOOK_URL=$PRODUCTION_URL/api/bot/webhook
BOT_AUTO_RESTART=true
EOF
    
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.production${NC}"
    echo -e "üìÑ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel Dashboard"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Vercel deployment script
create_vercel_deploy_script() {
    echo -e "\n${BLUE}üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–µ–ø–ª–æ—è –¥–ª—è Vercel...${NC}"
    
    cat > scripts/deploy-production.sh << 'EOF'
#!/bin/bash

# üöÄ Deploy to Vercel with proper environment variables

set -e

echo "üöÄ Deploying PokerTracker Pro to Vercel..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ .env.production —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f ".env.production" ]; then
    echo "‚ùå .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞."
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/fix-production-auth.sh"
    exit 1
fi

echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.production
source .env.production

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ -z "$NEXT_PUBLIC_APP_URL" ] || [ "$NEXT_PUBLIC_APP_URL" = "https://your-app.vercel.app" ]; then
    echo "‚ùå NEXT_PUBLIC_APP_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env.production"
    exit 1
fi

if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ] || [ "$NEXT_PUBLIC_SUPABASE_URL" = "https://your-project.supabase.co" ]; then
    echo "‚ùå NEXT_PUBLIC_SUPABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env.production"
    exit 1
fi

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# –î–µ–ø–ª–æ–π
echo "üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è..."
vercel --prod

echo ""
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard"
echo "2. Settings ‚Üí Environment Variables"
echo "3. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.production"
echo "4. Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
echo ""
echo "üîó –í–∞–∂–Ω–æ: –û–±–Ω–æ–≤–∏—Ç–µ Supabase Auth settings:"
echo "   - Site URL: $NEXT_PUBLIC_APP_URL"
echo "   - Redirect URLs: $NEXT_PUBLIC_APP_URL/auth/callback"
EOF
    
    chmod +x scripts/deploy-production.sh
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç scripts/deploy-production.sh${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ Supabase
create_supabase_instructions() {
    echo -e "\n${BLUE}üìã –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Supabase...${NC}"
    
    cat > SUPABASE_PRODUCTION_SETUP.md << 'EOF'
# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

## üéØ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

### 1. **Auth Settings –≤ Supabase Dashboard**

–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –≤ [Supabase Dashboard](https://app.supabase.com/) ‚Üí Authentication ‚Üí Settings:

#### **Site URL:**
```
https://your-app.vercel.app
```
‚ö†Ô∏è **–í–ê–ñ–ù–û:** –î–æ–ª–∂–µ–Ω —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å NEXT_PUBLIC_APP_URL

#### **Redirect URLs:**
```
https://your-app.vercel.app/auth/callback
https://your-app.vercel.app/auth
```

### 2. **Google OAuth Setup (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)**

–í Google Cloud Console ‚Üí APIs & Services ‚Üí Credentials:

#### **Authorized JavaScript origins:**
```
https://your-app.vercel.app
```

#### **Authorized redirect URIs:**
```
https://your-app.vercel.app/auth/callback
https://eyytlxntilefnmkhjgot.supabase.co/auth/v1/callback
```

### 3. **Environment Variables –≤ Vercel**

Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables:

```bash
NEXT_PUBLIC_APP_URL=https://your-app.vercel.app
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGci...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGci...
BOT_MODE=webhook
BOT_WEBHOOK_URL=https://your-app.vercel.app/api/bot/webhook
BOT_AUTO_RESTART=true
```

### 4. **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫**

–ü–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:

1. **Redeploy** –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Vercel
2. –û—Ç–∫—Ä–æ–π—Ç–µ **DevTools** ‚Üí Network tab
3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ CORS –∏–ª–∏ redirect

### 5. **–ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è**

#### **–ó–∞–≤–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ "–í–æ–π—Ç–∏":**
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Site URL –≤ Supabase
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ NEXT_PUBLIC_APP_URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
- –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞

#### **–û—à–∏–±–∫–∏ CORS:**
- –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω –≤ Supabase Auth settings
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Redirect URLs

#### **Google OAuth –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Google Cloud Console –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ Authorized origins

### 6. **–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ**

–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è:

1. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ Google OAuth
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ email/password –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
3. –í Supabase Dashboard ‚Üí Authentication ‚Üí Providers –æ—Ç–∫–ª—é—á–∏—Ç–µ Google
4. Redeploy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

### 7. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**

–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
curl https://your-app.vercel.app
curl https://your-app.vercel.app/auth
curl https://your-app.vercel.app/api/health
```

–í—Å–µ –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 200 –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.
EOF
    
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª SUPABASE_PRODUCTION_SETUP.md${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è health check endpoint
create_health_endpoint() {
    echo -e "\n${BLUE}üè• –°–æ–∑–¥–∞–Ω–∏–µ health check endpoint...${NC}"
    
    mkdir -p src/app/api/health
    
    cat > src/app/api/health/route.ts << 'EOF'
import { NextResponse } from "next/server";

/**
 * Health check endpoint –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * GET /api/health
 */
export async function GET() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const requiredEnvVars = [
      "NEXT_PUBLIC_SUPABASE_URL",
      "NEXT_PUBLIC_SUPABASE_ANON_KEY",
      "NEXT_PUBLIC_APP_URL"
    ];

    const missingVars = requiredEnvVars.filter(
      (varName) => !process.env[varName]
    );

    const health = {
      status: "ok",
      timestamp: new Date().toISOString(),
      environment: process.env.NODE_ENV || "development",
      version: process.env.npm_package_version || "unknown",
      appUrl: process.env.NEXT_PUBLIC_APP_URL || "not-set",
      supabaseConfigured: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
      googleOAuthConfigured: !!process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,
      botConfigured: !!process.env.TELEGRAM_BOT_TOKEN,
      botMode: process.env.BOT_MODE || "polling",
      missingEnvVars: missingVars.length > 0 ? missingVars : undefined
    };

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 500
    if (missingVars.length > 0) {
      return NextResponse.json(
        { ...health, status: "error" },
        { status: 500 }
      );
    }

    return NextResponse.json(health);
  } catch (error) {
    return NextResponse.json(
      {
        status: "error",
        timestamp: new Date().toISOString(),
        error: error instanceof Error ? error.message : "Unknown error"
      },
      { status: 500 }
    );
  }
}
EOF
    
    echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω health check endpoint: /api/health${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–∫—Å–∞ middleware
fix_middleware() {
    echo -e "\n${BLUE}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ middleware...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ middleware
    if [ -f "middleware.ts" ]; then
        cp middleware.ts middleware.ts.backup
        echo -e "üìÑ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: middleware.ts.backup"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    if grep -q "process.env.NEXT_PUBLIC_SUPABASE_URL!" middleware.ts; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ! assertion –≤ middleware${NC}"
        
        # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        sed -i.bak 's/process\.env\.NEXT_PUBLIC_SUPABASE_URL!/process.env.NEXT_PUBLIC_SUPABASE_URL || ""/g' middleware.ts
        sed -i.bak 's/process\.env\.NEXT_PUBLIC_SUPABASE_ANON_KEY!/process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ""/g' middleware.ts
        
        echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã ! assertions –≤ middleware${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é scripts –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p scripts
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    create_production_env
    create_vercel_deploy_script
    create_supabase_instructions
    create_health_endpoint
    fix_middleware
    
    echo -e "\n=================================================="
    echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã!${NC}"
    echo -e "\n${YELLOW}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo -e "1. üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env.production —Å –≤–∞—à–∏–º–∏ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    echo -e "2. üîß –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ SUPABASE_PRODUCTION_SETUP.md"
    echo -e "3. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./scripts/deploy-production.sh"
    echo -e "4. üè• –ü—Ä–æ–≤–µ—Ä—å—Ç–µ health: https://your-app.vercel.app/api/health"
    
    echo -e "\n${BLUE}üéØ –ì–ª–∞–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∑–∞–≤–∏—Å–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
    echo -e "‚Ä¢ NEXT_PUBLIC_APP_URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ localhost –≤–º–µ—Å—Ç–æ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–æ–º–µ–Ω–∞"
    echo -e "‚Ä¢ Site URL –≤ Supabase –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–æ–º–µ–Ω–æ–º"
    echo -e "‚Ä¢ Redirect URLs –Ω–µ –≤–∫–ª—é—á–∞—é—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–æ–º–µ–Ω"
    echo -e "‚Ä¢ Google OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è localhost"
    
    echo -e "\n${GREEN}üîß –≠—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—à–∞—Ç –ø—Ä–æ–±–ª–µ–º—É!${NC}"
}

# –ó–∞–ø—É—Å–∫
main
