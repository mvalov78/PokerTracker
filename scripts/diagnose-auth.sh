#!/bin/bash

# üîç PokerTracker Pro - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

set -e

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env_vars() {
    echo -e "\n${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    local required_vars=(
        "NEXT_PUBLIC_SUPABASE_URL"
        "NEXT_PUBLIC_SUPABASE_ANON_KEY"
        "SUPABASE_SERVICE_ROLE_KEY"
        "NEXT_PUBLIC_APP_URL"
    )
    
    local optional_vars=(
        "NEXT_PUBLIC_GOOGLE_CLIENT_ID"
        "GOOGLE_CLIENT_SECRET"
        "TELEGRAM_BOT_TOKEN"
    )
    
    local missing_critical=0
    local missing_optional=0
    
    echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    for var in "${required_vars[@]}"; do
        if [ -z "${!var}" ]; then
            echo -e "  ‚ùå $var - ${RED}–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê${NC}"
            missing_critical=$((missing_critical + 1))
        else
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            local value="${!var}"
            local masked="${value:0:8}...${value: -8}"
            echo -e "  ‚úÖ $var - ${GREEN}—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC} ($masked)"
        fi
    done
    
    echo -e "\n–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    for var in "${optional_vars[@]}"; do
        if [ -z "${!var}" ]; then
            echo -e "  ‚ö†Ô∏è  $var - ${YELLOW}–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
            missing_optional=$((missing_optional + 1))
        else
            local value="${!var}"
            local masked="${value:0:8}...${value: -8}"
            echo -e "  ‚úÖ $var - ${GREEN}—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC} ($masked)"
        fi
    done
    
    if [ $missing_critical -gt 0 ]; then
        echo -e "\n${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ $missing_critical –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è!${NC}"
        return 1
    else
        echo -e "\n${GREEN}‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    fi
    
    if [ $missing_optional -gt 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  $missing_optional –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_supabase_connection() {
    echo -e "\n${BLUE}üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...${NC}"
    
    if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ] || [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
        echo -e "${RED}‚ùå Supabase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Supabase API
    local supabase_health="${NEXT_PUBLIC_SUPABASE_URL}/rest/v1/"
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º: $supabase_health"
    
    if curl -s --max-time 10 -H "apikey: $NEXT_PUBLIC_SUPABASE_ANON_KEY" "$supabase_health" > /dev/null; then
        echo -e "${GREEN}‚úÖ Supabase API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${RED}‚ùå Supabase API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª—é—á–∏${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Next.js
check_nextjs_config() {
    echo -e "\n${BLUE}‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Next.js...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º next.config.ts
    if [ -f "next.config.ts" ]; then
        echo -e "‚úÖ next.config.ts –Ω–∞–π–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        if grep -q "experimental.*esmExternals.*false" next.config.ts; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ esmExternals: false${NC}"
        fi
        
        if grep -q "webpack.*externals" next.config.ts; then
            echo -e "${GREEN}‚úÖ Webpack externals –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  next.config.ts –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º middleware.ts
    if [ -f "middleware.ts" ]; then
        echo -e "‚úÖ middleware.ts –Ω–∞–π–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º —Å cookies
        if grep -q "cookies.*getAll\|cookies.*setAll" middleware.ts; then
            echo -e "${GREEN}‚úÖ Cookie handling –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å cookie handling${NC}"
        fi
    else
        echo -e "${RED}‚ùå middleware.ts –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–±–æ—Ä–∫–∏
check_build() {
    echo -e "\n${BLUE}üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
    
    if [ -d ".next" ]; then
        echo -e "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è .next –Ω–∞–π–¥–µ–Ω–∞"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏
        local build_size=$(du -sh .next 2>/dev/null | cut -f1)
        echo -e "üì¶ –†–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏: $build_size"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        if [ -f ".next/BUILD_ID" ]; then
            local build_id=$(cat .next/BUILD_ID)
            echo -e "üÜî Build ID: $build_id"
        fi
    else
        echo -e "${RED}‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–±—Ä–∞–Ω–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run build${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
check_logs() {
    echo -e "\n${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–¥–µ...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ console.error –≤ –∫–æ–¥–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    local auth_files=(
        "src/hooks/useAuth.tsx"
        "src/app/auth/page.tsx" 
        "src/lib/supabase.ts"
        "middleware.ts"
    )
    
    for file in "${auth_files[@]}"; do
        if [ -f "$file" ]; then
            echo -e "üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º $file..."
            
            # –ò—â–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
            if grep -n "console\.error\|throw new Error\|catch.*error" "$file" > /dev/null; then
                echo -e "  ${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫${NC}"
            fi
            
            if grep -n "useEffect.*\[\]" "$file" > /dev/null; then
                echo -e "  ‚úÖ useEffect —Å –ø—É—Å—Ç—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –Ω–∞–π–¥–µ–Ω"
            fi
            
            if grep -n "isLoading.*true" "$file" > /dev/null; then
                echo -e "  ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è"
            fi
        else
            echo -e "  ${RED}‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
test_auth_endpoints() {
    echo -e "\n${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ auth endpoints...${NC}"
    
    if [ -z "$NEXT_PUBLIC_APP_URL" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  NEXT_PUBLIC_APP_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã${NC}"
        return 0
    fi
    
    local app_url="$NEXT_PUBLIC_APP_URL"
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º: $app_url"
    
    # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    echo -n "üìÑ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: "
    if curl -s --max-time 10 "$app_url" > /dev/null; then
        echo -e "${GREEN}‚úÖ –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    fi
    
    # –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    echo -n "üîê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: "
    if curl -s --max-time 10 "$app_url/auth" > /dev/null; then
        echo -e "${GREEN}‚úÖ –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    fi
    
    # –¢–µ—Å—Ç API endpoints
    echo -n "üîå Health check: "
    if curl -s --max-time 10 "$app_url/api/health" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
generate_recommendations() {
    echo -e "\n${BLUE}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é...${NC}"
    
    echo -e "\n${YELLOW}üîß –ß–∞—Å—Ç—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∑–∞–≤–∏—Å–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
    echo "1. üîë –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Supabase –∫–ª—é—á–∏"
    echo "2. üåê –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π NEXT_PUBLIC_APP_URL"
    echo "3. üç™ –ü—Ä–æ–±–ª–µ–º—ã —Å cookies –≤ middleware"
    echo "4. üîÑ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo "5. üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ CORS"
    echo "6. üì± –ü—Ä–æ–±–ª–µ–º—ã —Å OAuth redirect URLs"
    
    echo -e "\n${GREEN}‚úÖ –ë—ã—Å—Ç—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Vercel Dashboard"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ NEXT_PUBLIC_APP_URL —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–æ–º–µ–Ω—É"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Supabase Auth settings:"
    echo "   - Site URL –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å NEXT_PUBLIC_APP_URL"
    echo "   - Redirect URLs –¥–æ–ª–∂–Ω—ã –≤–∫–ª—é—á–∞—Ç—å –≤–∞—à –¥–æ–º–µ–Ω"
    echo "4. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ –∏ cookies"
    echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –≤ DevTools –Ω–∞ –æ—à–∏–±–∫–∏"
    
    echo -e "\n${BLUE}üîç –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:${NC}"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools ‚Üí Network tab"
    echo "2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
    echo "3. –ù–∞–π–¥–∏—Ç–µ –∑–∞–≤–∏—Å—à–∏–π –∏–ª–∏ –ø–∞–¥–∞—é—â–∏–π –∑–∞–ø—Ä–æ—Å"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏"
    
    echo -e "\n${YELLOW}‚ö° –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
    echo "–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é:"
    echo "1. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ Google OAuth"
    echo "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ email/password"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ Supabase Auth –≤–∫–ª—é—á–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...${NC}"
    
    local exit_code=0
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å .env.local
    if [ -f ".env.local" ]; then
        echo -e "üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º .env.local..."
        set -a
        source .env.local
        set +a
    else
        echo -e "${YELLOW}‚ö†Ô∏è  .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ${NC}"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
    check_env_vars || exit_code=1
    check_supabase_connection || exit_code=1
    check_nextjs_config
    check_build || exit_code=1
    check_logs
    test_auth_endpoints
    
    echo -e "\n=================================================="
    
    if [ $exit_code -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.${NC}"
        echo -e "–ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—Å—ë –µ—â—ë –∑–∞–≤–∏—Å–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ browser DevTools."
    else
        echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã!${NC}"
        generate_recommendations
    fi
    
    echo -e "\n${BLUE}üìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: auth-diagnosis.log${NC}"
    
    return $exit_code
}

# –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞
main 2>&1 | tee auth-diagnosis.log
